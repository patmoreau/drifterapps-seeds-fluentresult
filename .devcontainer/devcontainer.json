// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
  "name": "fluentresult-devcontainer",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "build": {
    "dockerfile": "Dockerfile"
  },
  "mounts": [
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached"
  ],
  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/dotnet:2": {
      "version": "latest",
      "additionalVersions": "lts"
    },
    "ghcr.io/devcontainers/features/git-lfs:1": {
      "autoPull": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "username": "vscode",
      "uid": "1000",
      "gid": "1000",
      "installOhMyZsh": true,
      "upgradePackages": true
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [5000, 5001],
  // "portsAttributes": {
  //		"5001": {
  //			"protocol": "https"
  //		}
  // }
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "dotnet restore",
  "postStartCommand": "/bin/sh -c 'if [ ! -S /tmp/ssh-agent.sock ]; then eval $(ssh-agent -a /tmp/ssh-agent.sock); fi && ssh-add /home/vscode/.ssh/id_ed25519'",
  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-dotnettools.csdevkit",
        "ms-azuretools.vscode-docker",
        "eamodio.gitlens",
        "esbenp.prettier-vscode",
        "davidanson.vscode-markdownlint"
      ]
    }
  },
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "vscode",
  "remoteEnv": {
    "SSH_AUTH_SOCK": "/tmp/ssh-agent.sock"
  }
}